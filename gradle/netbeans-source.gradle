import java.util.jar.Manifest

apply from: "$rootDir/gradle/netbeans-base.gradle"

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['src']
            exclude '**/*.java'
        }
    }
}

def nbManifest = new Manifest(file("$projectDir/manifest.mf").newInputStream())
nbManifest.mainAttributes.keys.each {println it }
if (nbManifest.mainAttributes.containsKey('OpenIDE-Module-Localizing-Bundle')) {
    println nbManifest.mainAttributes['OpenIDE-Module-Localizing-Bundle']
    def bundle = new Properties()
    deb bundleName = nbManifest.attributes['OpenIDE-Module-Localizing-Bundle']
    file("src/$bundleName").withInputStream { bundle.load(it) }
    description = bundle.getProperty('OpenIDE-Module-Name')
}
jar {
    doFirst {
        println project.ext.projectProps
    }
    destinationDirectory = file("$clusterBuildDir/$moduleJarDir")
    archiveFileName = project.name.replace('.', '-') + '.jar'
    manifest.from file("$projectDir/manifest.mf")
    metaInf {
        from(rootDir) {
            include 'NOTICE'
            include 'LICENSE'
        }
    }
}

dependencies {
    def nb_module = clusters.modulesByName[project.name]
    
    if (nb_module != null) {
        nb_module.externalDeps.each { dep ->
            if (projectDir.name.startsWith('libs.')) {
                compile dep
            } else {
                implementation dep 
            }
        }
        nb_module.dependencies.each { dep ->
            implementation project(":${dep.codeNameBase}")
        }
    }
}
